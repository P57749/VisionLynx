{"remainingRequest":"C:\\Users\\Patricia\\Desktop\\Raciel2\\mecvision-master\\mecvision-master\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Patricia\\Desktop\\Raciel2\\mecvision-master\\mecvision-master\\src\\components\\micro.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Patricia\\Desktop\\Raciel2\\mecvision-master\\mecvision-master\\src\\components\\micro.vue","mtime":1704728051873},{"path":"C:\\Users\\Patricia\\Desktop\\Raciel2\\mecvision-master\\mecvision-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Patricia\\Desktop\\Raciel2\\mecvision-master\\mecvision-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Patricia\\Desktop\\Raciel2\\mecvision-master\\mecvision-master\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n data() {\n return {\n   imageSrc: null,\n };\n },\n mounted() {\n if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n   navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\n     this.$refs.video.srcObject = stream;\n   });\n }\n },\n methods: {\n takePicture() {\n   const canvas = document.createElement('canvas');\n   canvas.width = this.$refs.video.videoWidth;\n   canvas.height = this.$refs.video.videoHeight;\n   const ctx = canvas.getContext('2d');\n   ctx.drawImage(this.$refs.video, 0, 0, canvas.width, canvas.height);\n   this.imageSrc = canvas.toDataURL('image/png');\n },\n },\n};\n",{"version":3,"sources":["micro.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"micro.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n     <video ref=\"video\" autoplay></video>\r\n     <button @click=\"takePicture\">Tomar foto</button>\r\n     <img :src=\"imageSrc\" alt=\"Imagen capturada\" />\r\n    </div>\r\n   </template>\r\n   \r\n\r\n\r\n   <script>\r\n   export default {\r\n    data() {\r\n    return {\r\n      imageSrc: null,\r\n    };\r\n    },\r\n    mounted() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\r\n        this.$refs.video.srcObject = stream;\r\n      });\r\n    }\r\n    },\r\n    methods: {\r\n    takePicture() {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = this.$refs.video.videoWidth;\r\n      canvas.height = this.$refs.video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(this.$refs.video, 0, 0, canvas.width, canvas.height);\r\n      this.imageSrc = canvas.toDataURL('image/png');\r\n    },\r\n    },\r\n   };\r\n   </script>\r\n   \r\n\r\n"]}]}